
@CHECK_BEST_COMMANDER(勢力)
#DIM CHECK_IS_FREE, MAX_CHARA_NUM
#DIM SCORE_SUM, MAX_CHARA_NUM
#DIM 勢力
#DIM 候補数
#DIM 候補

VARSET CHECK_IS_FREE, -1
VARSET BEST_COMMANDER, -1
VARSET SCORE_SUM, __INT_MIN__

DUMPRAND

候補数 = 0
FOR LOCAL:0, 0, MIN(CHARANUM, MAX_CHARA_NUM)
	;自国の士官のみ考慮
	IF CFLAG:(LOCAL:0):所属 == 勢力 && TMP_IS_FREE:(LOCAL:0):0 == 0
		;MASTER麾下の武将は、除外フラグをたてていたら除外する
		SIF 勢力 == CFLAG:MASTER:所属 && CFLAG:(LOCAL):最強編成除外フラグ
			CONTINUE
		;自由に行動可能なキャラ番号をCHECK_IS_FREEに順番に格納
		CHECK_IS_FREE:候補数 = LOCAL:0
		候補数 ++
	ENDIF
NEXT

;候補がだれもいなければ戻す
IF 候補数 == 0
	INITRAND
	RETURN 1
ENDIF

FOR LOCAL:0, 0, 候補数

	;AIタイプごとの重み付けをしてスコアリングする
	LOCAL:2 = CHECK_IS_FREE:LOCAL

	{
		SCORE_SUM:LOCAL = 
			ABL_POWER(ABL:(LOCAL:2):武闘, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):0 / 100 + 
			ABL_POWER(ABL:(LOCAL:2):防衛, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):1 / 100 +
			ABL_POWER(ABL:(LOCAL:2):知略, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):2 / 100 +
			ABL_POWER(ABL:(LOCAL:2):妖術, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):3 / 100 +
			ABL_POWER(TMP_CHARA_STARS:(LOCAL:2) * 10, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):4 / 100 +
			ABL_POWER(ABL:(LOCAL:2):料理, LOCAL:2) +
			ABL_POWER(ABL:(LOCAL:2):歌唱, LOCAL:2)
	}

	;主人公優先設定がオンの場合、最優先で選択されるように
	IF LOCAL:2 == MASTER && CONFIG:310 == 1
		SCORE_SUM:LOCAL = __INT_MAX__
	;特殊勢力のキャラなら、各スコアを1にし、通常キャラが優先されるようにしておく。
	ELSEIF IS_SP_COUNTRY_CHARA(LOCAL:2)
		SCORE_SUM:LOCAL = 1
	ENDIF
NEXT

;評価点の高い順で選択
FOR LOCAL, 0, MAX_UNIT_COMMANDER
	SIF MAXARRAY(SCORE_SUM) == __INT_MIN__
		BREAK
	LOCAL:1 = FINDELEMENT(SCORE_SUM, MAXARRAY(SCORE_SUM))
	BEST_COMMANDER:LOCAL = CHECK_IS_FREE:(LOCAL:1)
	SCORE_SUM:(LOCAL:1) = __INT_MIN__
NEXT

INITRAND

RETURN 1

;-------------------------------------------------
;都市ARG:0に最適な守将を配置。ARG:1を1にすると二人設定できる。ARG:2を1にすると、その都市の守将を含めるようにする
;※直前に @TMP_CREATE_IS_FREE_MAP 関数を呼び出してから使用すること
;-------------------------------------------------
@SET_CITY_COMMANDER_BEST(ARG:0, ARG:1 = 0, ARG:2 = 0)
#DIM LCOUNT
CALL CHECK_BEST_COMMANDER(ARG:0)
FOR LCOUNT:0, 0, ARG:1 ? MAX_CITY_COMMANDER # 1
	CALL SET_CITY_COMMANDER(ARG:0, LCOUNT:0, BEST_COMMANDER:(LCOUNT:0))
NEXT
